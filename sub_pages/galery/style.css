@import url('https://fonts.googleapis.com/css?family=Noto+Sans&display=swap');

body {
	background: rgb(19, 19, 19);
	color: #fff;
	font-family: 'Noto Sans', sans-serif;
}

.card,
.photo-card {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	background: #353535;
	font-size: 3rem;
	color: #fff;
	box-shadow: rgba(3, 8, 20, 0.1) 0px 0.15rem 0.5rem, rgba(2, 8, 20, 0.1) 0px 0.75rem 0.175rem;
	height: 100%;
	width: 100%;
	border-radius: 4px;
	transition: all 500ms;
	overflow: hidden;

	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
}

.card:hover {
	box-shadow: rgba(2, 8, 20, 0.1) 0px 0.35em 1.175em, rgba(2, 8, 20, 0.8) 0px 0.175em 0.5em;
	transform: translateY(-3px) scale(1.1);
}

.basic-grid {
	display: grid;
	gap: 1rem;

	/*
	
	@media (min-width: 50em) {
		.class-of-grid-grid {
			grid-template-columns: repeat(4, 1fr);}	-> правило для минимальной ширины в 50em
		.grid-col-span-2 {
			grid-column: span 2;}
	}
	
	.class-of-grid:last-child {
		grid-column: 3;
		grid-column-end: 5} -> объект из колонки-ячейки 3 и заканчивается в колоне-ячейке 5

	.class-of-grid:last-child {
		grid-column-start: 4;
		grid-column-end: 1; }	 -> объект из колонны-ячейки 3 и заканчивается в строке 1

	
	.class-of-grid:last-child {
		grid-column-start: 4;
		grid-row-start: 1;
		grid-row-end: 3;}	-> объект из колонны 4 начинает со строки 1 и заканчивается на строке 3  <=> grid-row: 1 / 3;


	.grid-col-span-2 {grid-column: span 2;}	 -> можно использовать для широкого объекта, чтобы вписать в две колонки-ячейки в "строку"

	grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;

	grid-template-columns: repeat(12, 1fr); 12 - количество колонок-ячеек, 1fr - один фрейм для каждой

	grid-template-columns: repeat(12, minmax(240px, 1fr));*/

	grid-template-columns: repeat(auto-fit, minmax(240px, 300px));
}